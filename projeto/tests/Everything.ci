

class A
    var Int n
    func get -> Int { return n; }
    func set: Int n { self.n = n; }
end

class B extends A
    override
    func get -> Int { return super.get + 1; }
    override
    func set: Int n { super.set: n + 1; }
end


open
class Person
    var String name
    func setName: String name { self.name = name; }
    func getName -> String { return self.name; }
    func asString -> String {
        return "Person(" + self.name + ")";
    }
end

class Student extends Person
    var Int number;
    func setNumber: Int number { self.number = number; }
    func getNumber -> Int { return self.number; }
    override
    func asString -> String {
        return super asString + " Student(" + self.number + ")";
    }

end



class Everything

    func asString: Int a, Int b, String c, String d -> String {
        return 
    }

    func newTest {
        var Person p = Student.new;
        p.setName: "Doky";
        Out println: p.getName;
    }

    func comparisonTest {
        var String aa = "aa";
        var String bb = "bb";
          // "error in code generation for "
        assert !(aa == bb), "'==' between strings";
        assert (aa != bb), "'!=' between strings";
        assert "AA" != "Aa", "'==' between strings";
        var String az = "az";
        assert ("az" == az), "'!=' between strings";
        var Int p0 = 0;
        var Int p1 = 1;
        assert p0 != p1, "'!=' between Ints";
        assert !(p0 == p1), "'==' between Ints";
    }


    func run {
    }
    
    
end
